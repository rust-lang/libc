name: CI (Windows)

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - nightly
        target:
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
          - i686-pc-windows-gnu
          - i686-pc-windows-msvc
        include:
          - target: x86_64-pc-windows-gnu
            arch: x86_64
          - target: x86_64-pc-windows-msvc
            arch: x86_64
          - target: i686-pc-windows-gnu
            arch: i686
          - target: i686-pc-windows-msvc
            arch: i686

    name: ${{ matrix.version }} - ${{ matrix.target }}
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Install MinGW (i686)
        if: matrix.arch == 'i686'
        run: |
          choco install mingw --x86 --force

      - name: Find GCC libraries
        run: |
          set -ex
          gcc -print-search-dirs
          find "C:\ProgramData\Chocolatey" -name "crt2*"
          find "C:\ProgramData\Chocolatey" -name "dllcrt2*"
          find "C:\ProgramData\Chocolatey" -name "libmsvcrt*"
        shell: bash

      - name: Fix MinGW
        run: |
          set -ex
          if [[ -n ${ARCH_BITS} ]]; then
            for i in crt2.o dllcrt2.o libmingwex.a libmsvcrt.a ; do
              cp -f "/C/ProgramData/Chocolatey/lib/mingw/tools/install/mingw${ARCH_BITS}/${ARCH}-w64-mingw32/lib/$i" "`rustc --print sysroot`/lib/rustlib/${TARGET}/lib"
            done
          fi
        shell: bash

      - name: Install ${{ matrix.version }}
        run: TOOLCHAIN=${{ matrix.version }} TARGET=${{ matrix.target }} sh ./ci/install-rust.sh
        shell: bash

      - name: Run tests
        run: cargo test --all -- --nocapture
