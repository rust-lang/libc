pr: ["master"]

jobs:
  - job: NightlyLinux
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: azure-install-rust.yml
      - bash: sh ./ci/run-docker.sh $TARGET
        displayName: Execute run-docker.sh
      - bash: |
          if rustup component add rustfmt-preview ; then
              which rustfmt
              rustfmt -V
              cargo fmt --all -- --check
          fi
        displayName: rustfmt
      - bash: |
          if rustup component add clippy-preview ; then
              cargo clippy -- -D clippy::pedantic
          fi
        displayName: clippy
      - bash: |
          if shellcheck --version ; then
              shellcheck -e SC2103 ci/*.sh
          else
              echo "shellcheck not found"
              exit 1
          fi
        displayName: shellcheck

    strategy:
      matrix:
        x86_64-unknown-linux-gnu:
          TARGET: x86_64-unknown-linux-gnu
  
  - job: OSX64
    pool:
      vmImage: macos-10.14
    steps:
      - template: azure-install-rust.yml
      - bash: sh ./ci/run.sh $TARGET
        displayName: Execute run.sh
    strategy:
      matrix:
        x86_64-apple-darwin:
          TARGET: x86_64-apple-darwin

  - job: OSX32
    pool:
      vmImage: macos-10.13
    steps:
      - template: azure-install-rust.yml
      - bash: sh ./ci/run.sh $TARGET
        displayName: Execute run.sh
    strategy:
      matrix:
        i686-apple-darwin:
          TARGET: i686-apple-darwin

  - job: StabeBeta
    pool:
      vmImage: macos-10.14
    steps:
      - template: azure-install-rust.yml
      - bash: cargo test --all 
        displayName: Test
    strategy:
      matrix:
        stable:
          TARGET: x86_64-apple-darwin
          TOOLCHAIN: stable
        beta:
          TARGET: x86_64-apple-darwin
          TOOLCHAIN: beta
